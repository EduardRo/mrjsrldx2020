{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","monsters","map","monster","index","SearchBox","type","placeholder","onChange","handleChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,GAAhC,4BAEL,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,aCPHC,EAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,SAASC,KAAI,SAACC,EAASC,GAC5B,OACE,8BACE,cAAC,EAAD,CAAMN,KAAMK,EAAQL,KAAMC,MAAOI,EAAQJ,MAAOF,GAAIM,EAAQN,MADpDO,SCNPC,G,MAAY,SAACZ,GACxB,OACE,uBACEC,UAAU,SACVY,KAAK,SACLC,YAAad,EAAMc,YACnBC,SAAUf,EAAMgB,iBCmCPC,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEX,SAAUoB,S,+BAOrC,IAAD,EAC2BC,KAAKN,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZU,EAAmBtB,EAASuB,QAAO,SAACrB,GAAD,OACvCA,EAAQL,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CACEa,YAAY,kBACZE,aAAca,KAAKb,eAErB,cAAC,EAAD,CAAUR,SAAUsB,W,GAhCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.293c3fa7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img\r\n        alt='monster'\r\n        src={`https://robohash.org/${props.id}?set=set4&size=140x200`}\r\n      />\r\n      <h3>{props.name}</h3>\r\n      <p>{props.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.monsters.map((monster, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <Card name={monster.name} email={monster.email} id={monster.id} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className='search'\r\n      type='search'\r\n      placeholder={props.placeholder}\r\n      onChange={props.handleChange}\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n//import logo from './logo.svg';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Cats and Cats</h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}